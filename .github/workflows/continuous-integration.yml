
name: "Continuous Integration"

on:
  push:
    branches:
      - github-action-tests
  pull_request:

jobs:
  static-analysis-psalm:
    name: Static Analysis with Psalm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.1"
        with:
          coverage: "none"
          php-version: "7.4"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1.0.3"
        with:
          path: "~/.composer/cache"
          key: "composer-${{ hashFiles('composer.json') }}"
          restore-keys: "composer-"

      - name: "Install dependencies with composer"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: Psalm
        run: "vendor/bin/psalm"

  tests-postgresql:
    name: PHPUnit (PHP ${{ matrix.php-version }}) (PostgreSQL ${{ matrix.posgresql-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        php-version:
          #- "7.2"
          #- "7.3"
          - "7.4"

        posgresql-version:
          - "9.2"
          - "9.3"
          - "9.4"
          - "9.5"
          - "9.6"
          - "10"
          - "11"

    env:
      DB_URL: postgres://postgres:postgres@localhost:5555/tests
      TMPDB_URL: postgres://postgres:postgres@localhost:5555/postgres

    services:
      postgres:
        image: "postgres:${{ matrix.posgresql-version }}"
        env:
          POSTGRES_DB: tests
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5555:5432
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies with composer"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Run integration tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --configuration=tests/github-actions/phpunit.xml"

  tests-mysql:
    name: PHPUnit (PHP ${{ matrix.php-version }}) (MySQL ${{ matrix.mysql-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        php-version:
          #- "7.2"
          #- "7.3"
          - "7.4"

        mysql-version:
          - "5.7"
          - "8.0"

    env:
      DB_URL: mysql://mysql:LUhGR5tJ7WA2gbGumknCYBcB@localhost:3307/tests
      TMPDB_URL: mysql://mysql:LUhGR5tJ7WA2gbGumknCYBcB@localhost:3307

    services:
      mysql:
        image: "mysql:${{ matrix.mysql-version }}"
        env:
          MYSQL_DATABASE: tests
          MYSQL_USER: mysql
          MYSQL_PASSWORD: LUhGR5tJ7WA2gbGumknCYBc
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        ports:
          - 3307:3306
        options: >-
          --mount type=tmpfs,destination=/var/lib/mysql
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies with composer"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Run integration tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --configuration=tests/github-actions/phpunit.xml"
